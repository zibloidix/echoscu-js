const mockBuffer = {
	getAssocRequest: () => {
		return new Buffer(
			'0100000000cd00010000475256445f4d41494e20202020202020534f4d49414320202020202020202020000000000000000000000000000000000000000000000000000000000000000010000015312e322e3834302e31303030382e332e312e312e312000002e0100ff0030000011312e322e3834302e31303030382e312e3140000011312e322e3834302e31303030382e312e325000003a51000004000040005200001b312e322e3237362e302e373233303031302e332e302e332e362e325500000f4f464649535f44434d544b5f333632',
			'hex'
		);
  },
  getAssocAccept: () => {
		return new Buffer(
			'0200000000ad00010000475256445f4d41494e20202020202020534f4d49414320202020202020202020000000000000000000000000000000000000000000000000000000000000000010000015312e322e3834302e31303030382e332e312e312e31210000190100000040000011312e322e3834302e31303030382e312e325000002f5100000400003fe052000011312e322e34302e302e31332e312e312e315500000e64636d346368652d312e342e3334',
			'hex'
		);
  },
  getAssocReject: () => {
		return new Buffer(
			'03000000000400010107',
			'hex'
		);
  },
  getDataRequest: () => {
		return new Buffer(
			'04000000004a0000004601030000000004000000380000000000020012000000312e322e3834302e31303030382e312e3100000000010200000030000000100102000000010000000008020000000101',
			'hex'
		);
  },
  getDataResponse: () => {
		return new Buffer(
			'0400000000540000005001030000000004000000420000000000020012000000312e322e3834302e31303030382e312e310000000001020000003080000020010200000001000000000802000000010100000009020000000000',
			'hex'
		);
  },
  getReleaseRequest: () => {
		return new Buffer(
			'05000000000400000000',
			'hex'
		);
  },
  getReleaseResponse: () => {
		return new Buffer(
			'06000000000400000000',
			'hex'
		);
  },
};

module.exports = mockBuffer;

